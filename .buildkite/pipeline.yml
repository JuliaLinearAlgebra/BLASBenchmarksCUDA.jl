steps:
  - label: "Julia 1.6-nightly"
    plugins:
      - JuliaCI/julia#v0.6:
          version: '1.6-nightly'
    command: |
      julia --project -e '
        using Pkg
        include(joinpath(".ci", "build.jl"))
        Pkg.test(; coverage = false)'
    agents:
      queue: "juliagpu"
      cuda: "*"
      cap: "recent"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

  - label: "Julia nightly"
    plugins:
      - JuliaCI/julia#v0.6:
          version: 'nightly'
    command: |
      julia --project -e '
        using Pkg
        include(joinpath(".ci", "build.jl"))
        Pkg.test(; coverage = false)'
    agents:
      queue: "juliagpu"
      cuda: "*"
      cap: "recent"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

env:
  JULIA_PKG_SERVER: "" # it often struggles with our large artifacts
  PYTHON: "" # tells PyCall.jl to install its own Python via Conda.jl
